# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств.

# def elements_set(x, mn):
#     for i in range(x):
#         x = int(input("Введите элемент множества: "))
#         mn.add(x)
#     print(mn)
#
# n = int(input('Введите кол-во элементов первого множества: '))
# n_set = set()
# elements_set(n, n_set)
#
# m = int(input('Введите кол-во элементов второго множества: '))
# m_set = set()
# elements_set(m, m_set)
#
# mn = sorted(set(n_set & m_set))
#
# for i in mn:
#     print(i, end=' ')


# В фермерском хозяйстве в Карелии выращивают чернику.
# Она растёт на круглой грядке, причём кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод — на i-ом кусте выросло a[i] ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом,
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
# находясь перед некоторым кустом заданной во входном списке урожайности грядки.

# n = int(input("Введитколичество кустов: "))
# barry_numbers = list()
# for i in range(n):
#     x = int(input(f"Введите количество ягод на {i + 1} кусте: "))
#     barry_numbers.append(x)
#
# count = list()
# for i in range(len(barry_numbers) - 1):
#     count.append(barry_numbers[i - 1] + barry_numbers[i] + barry_numbers[i + 1])
# count.append(barry_numbers[-2] + barry_numbers[-1] + barry_numbers[0])
# print(f"Максимальное количество ягод собираное за один заход: {max(count)}")

# Напишите программу, которая получает целое число и возвращает его двоичное, восьмеричное строковое представление.
# Функции bin и oct используйте для проверки своего результата.
# *Дополнительно
# Попробуйте избежать дублирования кода в преобразованиях к разным системам счисления
# Избегайте магических чисел
# Добавьте аннотацию типов где это возможно
# Используйте функции
#
# def Convert(number: int, x: int) -> str:
#     result: str = ''
#     while number > 0:
#         result = str(number % x) + result
#         number = number // x
#     return result
#
# def Message(number: int, x: int) -> str:
#     if number == 0:
#         return '0'
#     if number < 0:
#         number *= -1
#         return (f"-{Convert(number, x)}")
#     if number > 0:
#         return Convert(number, x)
#
#
# number: int = int(input("Введите число для перевода: "))
#
# print(f"Число в двоичной системе: {Message(number, 2)}")
# print(f"Число в весьмеричной системе: {Message(number, 8)}")
# print(f"Число в двоичной системе (проверка): {bin(number)}, \nЧисло в весьмеричной системе (проверка): {oct(number)}")
